from sklearn import tree
from sklearn.metrics import accuracy_score
from sklearn.svm import SVC
from sklearn.neighbors import KNeighborsClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
import numpy as np

# [height, weight, shoe_size]
X = [[181, 80, 44], [177, 70, 43], [160, 60, 38], [154, 54, 37], [166, 65, 40],
     [190, 90, 47], [175, 64, 39],
     [177, 70, 40], [159, 55, 37], [171, 75, 42], [181, 85, 43]]

Y = ['male', 'male', 'female', 'female', 'male', 'male', 'female', 'female',
     'female', 'male', 'male']


#Model 1: Decision Tree Classifier
clf_tree = tree.DecisionTreeClassifier()
clf_tree.fit(X,Y) #Train Model
pred_tree= clf_tree.predict(X)
acc_tree=accuracy_score(Y,pred_tree)*100
print('Accuracy for DecisionTree: {}'.format(acc_tree))

#Model 2: Support Vector Classification
clf_SVC=SVC()
clf_SVC.fit(X,Y) 
pred_SVC = clf_SVC.predict(X)
acc_SVC = accuracy_score(Y, pred_SVC) * 100
print('Accuracy for SVC: {}'.format(acc_SVC))

#Model 3: KNeighbors Classifier
clf_KNC=KNeighborsClassifier()
clf_KNC.fit(X,Y)
pred_KNC = clf_KNC.predict(X)
acc_KNC = accuracy_score(Y, pred_KNC) * 100
print('Accuracy for KNC: {}'.format(acc_KNC))

#Model 4: Random Forest Classifier
clf_RFC=RandomForestClassifier()
clf_RFC.fit(X,Y)
pred_RFC = clf_RFC.predict(X)
acc_RFC= accuracy_score(Y,pred_RFC)*100
print('Accuracy for TTS: {}'.format(acc_RFC))

#Comparing Classifiers
#we take the highest accuracy score and assign each an index 
#each index is matched to the classifier name 
index = np.argmax([acc_tree, acc_SVC, acc_KNC,acc_RFC]) 
classifiers = {0:'TREE',1:'SVC',2:'KNC',3:'RFC'}
print('Best Classifier is {}'.format(classifiers[index]))
